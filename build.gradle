plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.1'
    id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web',
        'io.kubernetes:client-java:18.0.1',
        'io.kubernetes:client-java-api-fluent:18.0.1',
        'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.0',
        'org.springframework.boot:spring-boot-starter-data-mongodb'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

jar {
    enabled = false
}

bootJar {
    archiveFileName = "out.jar"
}

bootRun {
    doFirst { // export env variables from .env file, only for local dev
        def envFile = new File('.env')
        if (envFile.exists()) {
            envFile.text.eachLine { line ->
                def (key, value) = line.tokenize('=')
                environment key, value
            }
        }
    }
    jvmArgs = ["-Dspring.profiles.active=local", "-Dspring.output.ansi.enabled=ALWAYS"]
}
